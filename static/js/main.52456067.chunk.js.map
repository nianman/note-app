{"version":3,"sources":["js/actions/noteActions.js","js/components/note-form/NoteForm.js","js/components/note/Note.js","js/components/note-list/NoteList.js","js/components/note-page/NotePage.js","js/components/App.js","js/reducers/index.js","index.js"],"names":["deleteNote","id","type","connect","state","notes","dispatch","addNote","title","content","author","nextId","date","Date","toDateString","slice","charAt","toUpperCase","props","useState","display","setDisplay","setTitle","setContent","setAuthor","Helmet","charSet","className","onSubmit","e","preventDefault","strippedTitles","map","item","alert","includes","submitHandler","placeholder","value","onChange","target","match","titleHandler","editor","ClassicEditor","data","getData","contentHandler","onClick","authorHandler","index","key","setDex","properties","style","color","textDecoration","to","class","href","length","marginTop","noteId","parseInt","params","find","parse","App","fontSize","exact","path","component","NoteList","NoteForm","NotePage","initState","persistedState","serializedState","localStorage","getItem","JSON","console","log","loadFromLocalStorage","store","createStore","action","newPost","filtered","filter","subscribe","stringify","setItem","saveToLocaleStorage","getState","wrapper","document","getElementById","ReactDOM","render"],"mappings":"4NAeaA,EAAa,SAACC,GACvB,MAAO,CACHC,KAAM,cACND,O,0CC4EOE,eALS,SAACC,GACrB,MAAO,CACHC,MAAOD,EAAMC,UAPM,SAACC,GACxB,MAAO,CACHC,QAAS,SAACC,EAAOC,EAASC,GAAjB,OAA4BJ,EDpFtB,SAACE,EAAOC,EAASC,GACpC,IAAMT,EAAKU,MACPC,EAAO,IAAIC,KAEf,OADAD,EAAOA,EAAKE,eAAeC,MAAM,GAC1B,CACHb,KAAM,WACND,KACAO,MAAOA,EAAMQ,OAAO,GAAGC,cAAgBT,EAAMO,MAAM,GACnDN,UACAC,SACAE,QC0E8CL,CAAQC,EAAOC,EAASC,QAQ/DP,EAvFE,SAACe,GAAW,IAClBX,EAAkBW,EAAlBX,QAASF,EAASa,EAATb,MADQ,EAEMc,oBAAS,GAFf,mBAEjBC,EAFiB,KAERC,EAFQ,OAGEF,mBAAS,IAHX,mBAGjBX,EAHiB,KAGVc,EAHU,OAIMH,mBAAS,IAJf,mBAIjBV,EAJiB,KAIRc,EAJQ,OAKIJ,mBAAS,IALb,mBAKjBT,EALiB,KAKTc,EALS,KA0CxB,OAAQ,oCACA,kBAACC,EAAA,EAAD,KACI,0BAAMC,QAAQ,UACd,wCAEJ,0BAAMC,UAAU,mBAAmBC,SAAU,SAACC,GAAD,OAxBrD,SAAuBA,GACnBA,EAAEC,iBACF,IAAMC,EAAiB1B,EAAM2B,KAAI,SAAAC,GAAI,OAAIA,EAAKzB,SAEhC,KAAVA,GAA2B,KAAXE,GAA6B,KAAZD,EACjCyB,MAAM,2BACCH,EAAeI,SAAS3B,GAC/B0B,MAAM,wCAEN3B,EAAQC,EAAOC,EAASC,GACxBY,EAAS,IACTC,EAAW,IACXC,EAAU,KAY0CY,CAAcP,KAC9D,yBAAKF,UAAU,cACX,2BAAOA,UAAU,eAAeU,YAAY,kBAAkBC,MAAO9B,EAC9D+B,SAAU,SAACV,GAAD,OA1CjC,SAAsBA,GACyB,MAAvCA,EAAEW,OAAOF,MAAMG,MAAM,gBACrBnB,EAASO,EAAEW,OAAOF,OAwCcI,CAAab,OAEzC,yBAAKF,UAAU,cACX,kBAAC,IAAD,CAAUgB,OAAQC,IAAeC,KAAMpC,EAC7B8B,SAAU,SAACV,EAAGc,GAAJ,OAxCpC,SAAwBd,EAAGc,GACvBpB,EAAWoB,EAAOG,WAuC6BC,CAAelB,EAAGc,OAEzD,yBAAKhB,UAAU,cACX,2BAAOqB,QAAS,kBAAM3B,GAAYD,IAC3BO,UAAU,eAAeU,YAAY,kBAAkBC,MAAO5B,EAC9D6B,SAAU,SAACV,GAAD,OAzCjC,SAAuBA,GACnBL,EAAUK,EAAEW,OAAOF,OAwCiBW,CAAcpB,MACrCT,GACG,yBAAKO,UAAU,mBACVtB,EAAM2B,KAAI,SAACC,EAAMiB,GACd,OAAQ,yBAAKvB,UAAU,yCAAyCwB,IAAKD,EAAOF,QAAS,kBAzBlG,SAACtC,GACZc,EAAUd,GACVW,GAAW,GAuBuG+B,CAAOnB,EAAKvB,UAClG,8BAAOuB,EAAKvB,cAMhC,4BAAQsC,QAAS,kBAAM3B,GAAYD,IAAUO,UAAU,mBAAvD,gB,OCxCDxB,cAAQ,MALI,SAACG,GACxB,MAAO,CACHN,WAAY,SAACC,GAAD,OAAQK,EAASN,EAAWC,QAGjCE,EA/BF,SAACkD,GAAgB,IACnBrD,EAAqBqD,EAArBrD,WAAYkB,EAASmC,EAATnC,MACZjB,EAA2BiB,EAA3BjB,GAAIO,EAAuBU,EAAvBV,MAAOE,EAAgBQ,EAAhBR,OAAQE,EAAQM,EAARN,KAK1B,OACI,oCACI,kBAACa,EAAA,EAAD,KACI,0BAAMC,QAAQ,UACd,wCAGJ,wBAAIC,UAAU,qDACV,kBAAC,IAAD,CAAMA,UAAU,+BAA+B2B,MAAO,CAACC,MAAO,UAAWC,eAAgB,WAAYC,GAAE,gBAAWvC,EAAMjB,KACpH,wBAAI0B,UAAU,QAAQnB,GACtB,2BAAIE,GACJ,uBAAGiB,UAAU,cAAb,SAAiCf,IAErC,uBAAG8C,MAAM,sBAAsBC,KAAK,IAAIX,QAAS,WAfzDhD,EAAWC,KAeH,gBCIDE,eALS,SAACC,GACrB,MAAO,CACHC,MAAOD,EAAMC,UAPM,SAACC,GACxB,MAAO,CACHN,WAAY,SAACC,GAAD,OAAQK,EAASN,EAAWC,QAQjCE,EAxBE,SAACe,GACd,OAA0B,IAAvBA,EAAMb,MAAMuD,OAEX,4BACK1C,EAAMb,MAAM2B,KAAI,SAAAC,GACb,OACI,kBAAC,EAAD,CAAMN,UAAU,aAAaT,MAAOe,EAAMkB,IAAKlB,EAAKhC,SAKzD,wBAAIqD,MAAO,CAACO,UAAU,SAAUlC,UAAU,iDAA1C,0B,wBCiBAxB,eALS,SAACC,GACrB,MAAO,CACHC,MAAOD,EAAMC,SAGNF,EA7BE,SAAC,GAAoB,IAAnBsC,EAAkB,EAAlBA,MAAOpC,EAAW,EAAXA,MAClByD,EAASC,SAAStB,EAAMuB,OAAOF,QAQnC,OANAzD,EAAQA,EAAM4D,MAAK,SAAAhC,GACf,GAAIA,EAAKhC,KAAO6D,EACZ,OAAO7B,KAIP,oCACJ,kBAACR,EAAA,EAAD,KACI,0BAAMC,QAAQ,UACd,+BAAQrB,EAAMG,QAElB,yBAAKmB,UAAU,yBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAActB,EAAMG,OAClC,yBAAKmB,UAAU,kBAAkBuC,IAAM7D,EAAMI,UAC7C,wBAAIkB,UAAU,sCAAsCtB,EAAMK,QAC1D,wBAAIiB,UAAU,iCAAiCtB,EAAMO,YCEtDuD,EAnBH,WAER,OACI,oCACI,yBAAKxC,UAAU,0CACX,yBAAKA,UAAU,kDACX,kBAAC,IAAD,CAAMA,UAAU,aAAa2B,MAAO,CAACc,SAAU,QAASX,GAAG,KAA3D,QACA,kBAAC,IAAD,CAAM9B,UAAU,aAAa2B,MAAO,CAACc,SAAU,QAASX,GAAG,SAA3D,iBAIR,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAWE,IACrC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,gBAAgBC,UAAWG,M,iCCnBnDC,EAAY,CACdtE,MAAO,CACH,CACIJ,GAAI,EACJO,MAAO,8BACPC,QAAS,gcACTC,OAAQ,kBACRE,KAAM,eAEV,CACIX,GAAI,EACJO,MAAO,UACPC,QAAS,gcACTC,OAAQ,iBACRE,KAAM,cAEV,CACIX,GAAI,EACJO,MAAO,YACPC,QAAS,gcACTC,OAAQ,mBACRE,KAAM,iBCOlB,IAAMgE,EAbN,WACI,IACI,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACA,OAEJ,OAAOG,KAAKd,MAAMW,GACrB,MAAOhD,GAEJ,YADAoD,QAAQC,IAAIrD,IAKGsD,GAEjBC,EAAQC,aDLC,WAAiD,IAA5BjF,EAA2B,uDAAnBuE,EAAWW,EAAQ,uCAC3D,GAAoB,aAAhBA,EAAOpF,KAAqB,CAC5B+E,QAAQC,IAAII,GADgB,IAGrBrF,EAAoCqF,EAApCrF,GAAIO,EAAgC8E,EAAhC9E,MAAOC,EAAyB6E,EAAzB7E,QAASC,EAAgB4E,EAAhB5E,OAAQE,EAAQ0E,EAAR1E,KAC/B2E,EAAU,CACVtF,KACAO,QACAC,UACAC,SACAE,QAEJ,MAAO,CACHP,MAAM,GAAD,mBAAMD,EAAMC,OAAZ,CAAmBkF,KAG3B,GAAoB,gBAAhBD,EAAOpF,KAAuB,CACnC,IAAIsF,EAAWpF,EAAMC,MAAMoF,QAAO,SAAAxD,GAAI,OAAEA,EAAKhC,KAAOqF,EAAOrF,MAC3D,MAAO,CACHI,MAAOmF,GAIf,OADAP,QAAQC,IAAII,GACLlF,IClB4BwE,GAEvCQ,EAAMM,WAAU,kBAzBhB,SAA6BtF,GACzB,IACI,IAAMyE,EAAkBG,KAAKW,UAAUvF,GACvC0E,aAAac,QAAQ,QAASf,GAChC,MAAOhD,GACLoD,QAAQC,IAAIrD,IAoBEgE,CAAoBT,EAAMU,eAEhD,IAAMC,EAAUC,SAASC,eAAe,QAEpCC,IAASC,OACL,kBAAC,IAAD,CAAUf,MAAOA,GACb,kBAAC,IAAD,KAAQ,kBAAC,EAAD,QAEVW,K","file":"static/js/main.52456067.chunk.js","sourcesContent":["import nextId from \"react-id-generator\";\n\nexport const addNote = (title, content, author) => {\n    const id = nextId();\n    let date = new Date();\n    date = date.toDateString().slice(4);\n    return {\n        type: \"ADD_NOTE\",\n        id,\n        title: title.charAt(0).toUpperCase() + title.slice(1),\n        content,\n        author,\n        date\n    }\n}\nexport const deleteNote = (id) => {\n    return {\n        type: \"DELETE_NOTE\",\n        id\n    }\n}","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {addNote} from \"../../actions/noteActions\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {Helmet} from \"react-helmet\";\n\nconst NoteForm = (props) => {\n    const {addNote, notes} = props;\n    const [display, setDisplay] = useState(false);\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [author, setAuthor] = useState('');\n\n\n    function titleHandler(e) {\n        if (e.target.value.match(/^([^0-9]*)$/) != null) {\n            setTitle(e.target.value)\n        }\n    }\n\n    function contentHandler(e, editor) {\n        setContent(editor.getData())\n    }\n\n    function authorHandler(e) {\n        setAuthor(e.target.value)\n    }\n\n\n    function submitHandler(e) {\n        e.preventDefault();\n        const strippedTitles = notes.map(item => item.title);\n\n        if (title === '' || author === '' || content === '') {\n            alert('Please fill all fields!');\n        } else if (strippedTitles.includes(title)) {\n            alert('Note with this title already exists')\n        } else {\n            addNote(title, content, author);\n            setTitle('');\n            setContent('');\n            setAuthor('');\n        }\n    }\n    const setDex = (author) => {\n        setAuthor(author);\n        setDisplay(false);\n    }\n    return (<>\n            <Helmet>\n                <meta charSet=\"utf-8\"/>\n                <title>Form</title>\n            </Helmet>\n            <form className='w-50 p-3 mx-auto' onSubmit={(e) => submitHandler(e)}>\n                <div className=\"form-group\">\n                    <input className=\"form-control\" placeholder='Enter the title' value={title}\n                           onChange={(e) => titleHandler(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <CKEditor editor={ClassicEditor} data={content}\n                              onChange={(e, editor) => contentHandler(e, editor)}/>\n                </div>\n                <div className=\"form-group\">\n                    <input onClick={() => setDisplay(!display)}\n                           className=\"form-control\" placeholder='Enter your name' value={author}\n                           onChange={(e) => authorHandler(e)}/>\n                    {display && (\n                        <div className=\"list-group mt-1\">\n                            {notes.map((item, index) => {\n                                return (<div className=\"list-group-item list-group-item-light \" key={index} onClick={() =>setDex(item.author)}>\n                                    <span>{item.author}</span>\n                                </div>)\n                            })}\n                        </div>\n                    )}\n                </div>\n                <button onClick={() => setDisplay(!display)} className=\"btn btn-primary\">Submit!</button>\n            </form>\n\n\n        </>\n    )\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addNote: (title, content, author) => dispatch(addNote(title, content, author))\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        notes: state.notes\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteForm);","import {deleteNote} from \"../../actions/noteActions\";\nimport {Helmet} from \"react-helmet\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nconst Note = (properties) => {\n    const {deleteNote, props} = properties;\n    const {id, title, author, date} = props;\n\n    const linkHandler = () => {\n        deleteNote(id);\n    };\n    return (\n        <>\n            <Helmet>\n                <meta charSet=\"utf-8\"/>\n                <title>Home</title>\n            </Helmet>\n\n            <li className=\" list-group-item w-75 p-3 mx-auto list-group-item\">\n                <Link className=\" list-group-item p-3 mx-auto\" style={{color: 'inherit', textDecoration: 'inherit'}} to={`/note/${props.id}`}>\n                    <h4 className='mb-3'>{title}</h4>\n                    <p>{author}</p>\n                    <p className='text-muted'>Date: {date}</p>\n                </Link>\n                <a class=\"btn btn-danger mt-3\" href=\"#\" onClick={() => linkHandler()}>Delete!</a>\n            </li>\n\n        </>\n    )\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteNote: (id) => dispatch(deleteNote(id))\n    }\n}\nexport default connect(null, mapDispatchToProps)(Note);\n//","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {deleteNote} from \"../../actions/noteActions\";\nimport Note from \"../../components/note/Note\"\n\nconst NoteList = (props) => {\n    if(props.notes.length !== 0){\n    return (\n        <ul>\n            {props.notes.map(item => {\n                return (\n                    <Note className='list-group' props={item} key={item.id}/>\n                )\n            })}\n        </ul>\n    )}else{\n        return <h2 style={{marginTop:\"250px\"}} className=\"text-center display-4 text-muted align-middle\"> Create a new note!</h2>\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteNote: (id) => dispatch(deleteNote(id))\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        notes: state.notes\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport parse from 'html-react-parser';\nimport {Helmet} from \"react-helmet\";\n\nconst NotePage = ({match, notes}) => {\n    let noteId = parseInt(match.params.noteId);\n\n    notes = notes.find(item => {\n        if (item.id === noteId) {\n            return item\n        }\n    })\n\n    return (<>\n        <Helmet>\n            <meta charSet=\"utf-8\"/>\n            <title>{notes.title}</title>\n        </Helmet>\n        <div className='card w-75 p-3 mx-auto'>\n            <div className='card-body'>\n                <h1 className=\"card-title\">{notes.title}</h1>\n                <div className=\"card-text mb-2\">{parse(notes.content)}</div>\n                <h5 className=\"card-subtitle mb-3 pt-3 text-muted\">{notes.author}</h5>\n                <h6 className='card-subtitle mb-3 text-muted'>{notes.date}</h6>\n            </div>\n        </div>\n    </>)\n}\nconst mapStateToProps = (state) => {\n    return {\n        notes: state.notes\n    }\n}\nexport default connect(mapStateToProps)(NotePage);","import React from \"react\";\nimport NoteForm from \"./note-form/NoteForm\";\nimport NoteList from \"./note-list/NoteList\";\nimport {Link, Route} from 'react-router-dom';\nimport NotePage from \"./note-page/NotePage\";\n\n\nconst App = () => {\n\n    return (\n        <>\n            <nav className='p-3 mb-2 bg-info text-white sticky-top'>\n                <div className='w-50 p-3 mx-auto d-flex justify-content-around'>\n                    <Link className='text-white' style={{fontSize: \"24px\"}} to=\"/\">Home</Link>\n                    <Link className='text-white' style={{fontSize: \"24px\"}} to=\"/form\">Create Note</Link>\n                </div>\n            </nav>\n\n            <Route exact path=\"/\" component={NoteList}/>\n            <Route exact path=\"/form\" component={NoteForm}/>\n            <Route exact path=\"/note/:noteId\" component={NotePage}/>\n        </>\n    )\n}\n\n\nexport default App;\n\n","\nconst initState = {\n    notes: [\n        {\n            id: 0,\n            title: 'Consectetur adipiscing elit',\n            content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n            author: 'Albert Einstein',\n            date: 'Jun 12 1998'\n        },\n        {\n            id: 1,\n            title: 'Eiusmod',\n            content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n            author: 'Marilyn Monroe',\n            date: 'Apr 1 2007'\n        },\n        {\n            id: 2,\n            title: 'Consequat',\n            content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n            author: 'J. R. R. Tolkien',\n            date: 'Feb 29 2000'\n        },\n    ]\n}\nexport default function rootReducer(state = initState, action) {\n    if (action.type === 'ADD_NOTE') {\n        console.log(action)\n\n        const {id, title, content, author, date} = action;\n        let newPost = {\n            id,\n            title,\n            content,\n            author,\n            date\n        }\n        return {\n            notes: [...state.notes, newPost]\n        }\n    }\n    else if (action.type === \"DELETE_NOTE\"){\n        let filtered = state.notes.filter(item=>item.id !== action.id)\n        return {\n            notes: filtered\n        }\n    }\n    console.log(action)\n    return state;\n};\n","import App from \"./js/components/App\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {Provider} from 'react-redux';\nimport {createStore} from \"redux\";\nimport rootReducer from \"./js/reducers\";\nimport {HashRouter as Router} from 'react-router-dom';\n\nfunction saveToLocaleStorage(state) {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch (e) {\n        console.log(e)\n    }\n}\nfunction loadFromLocalStorage() {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined\n        }\n        return JSON.parse(serializedState)\n    }catch (e) {\n        console.log(e)\n        return undefined\n    }\n}\n\nconst persistedState = loadFromLocalStorage();\n\nconst store = createStore(rootReducer, persistedState);\n\nstore.subscribe(() => saveToLocaleStorage(store.getState()));\n\nconst wrapper = document.getElementById(\"root\");\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <Router><App/></Router>\n        </Provider>\n        , wrapper)\n\n"],"sourceRoot":""}